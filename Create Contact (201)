// Check that the response status code is 400 (Bad Request)
pm.test("Response status code is 400", function () {
    pm.response.to.have.status(400);
});

// Verify that the response message contains the error description
pm.test("Response message contains the error description", function () {
    const responseData = pm.response.json();
    pm.expect(responseData).to.have.property('message', 'Unexpected string in JSON at p ...');
    pm.expect(responseData).to.have.property('error', 'Bad Request');
    pm.expect(responseData).to.have.property('statusCode', 400);
});// Check that the response status code is 201 (Created)
pm.test("Response status code is 201", function () {
    pm.expect(pm.response.code).to.equal(201);
});

// Verify that the response is valid JSON and contains a 'contact' object with 'id'
pm.test("Response has a 'contact' object with an 'id'", function () {
    const responseData = pm.response.json();
    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData).to.have.property('contact');
    pm.expect(responseData.contact).to.be.an('object');
    pm.expect(responseData.contact).to.have.property('id');
    pm.expect(responseData.contact.id).to.be.a('string').and.to.have.lengthOf.at.least(1);

    // Optionally store the contact ID for future requests
    pm.environment.set("test_contact_id", responseData.contact.id);
});

// Check that the Content-Type header is application/json
pm.test("Content-Type is application/json", function () {
    pm.expect(pm.response.headers.get("Content-Type")).to.include("application/json");
});

// Ensure response time is reasonable (e.g., less than 500ms)
pm.test("Response time is less than 500ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(500);
});

// Check for key contact properties if necessary
pm.test("Contact has expected fields", function () {
    const responseData = pm.response.json();
    pm.expect(responseData.contact).to.have.property('firstName', 'John');
    pm.expect(responseData.contact).to.have.property('lastName', 'Doe');
    pm.expect(responseData.contact).to.have.property('email', 'john.doe@example.com');
});
